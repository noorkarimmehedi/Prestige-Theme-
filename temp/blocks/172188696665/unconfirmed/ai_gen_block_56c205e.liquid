{% doc %}
  @prompt
    build this for me: <style>
      .sub-category{
        width:85%;
        margin:0 auto;
      }
      .content-area{
        text-align:center;
        padding:15px 0px;
      }
      .content-area img{
        height:100px;
        width:100px;
        margin: 0 auto;
        object-fit:cover;
        border-radius:50%;
        box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
        transition: all 0.2s ease-in-out;
      }
      .content-area:hover img{
        transform: scale(1.1);
      }
      .content-area a{
        text-decoration: none;
      }
      .content-area h2{
        font-size: 14px;
      }
    
      /* Media Query for Mobile */
      @media (max-width: 600px) {
        .content-area img {
          height: 60px; /* Adjust the height as needed for mobile */
          width: 60px; /* Adjust the width as needed for mobile */
        }
        .content-area h2{
          font-size: 12px;
        }
      }
      
    </style>
    <link rel="stylesheet" href="http://kenwheeler.github.io/slick/slick/slick.css" type="text/css"/>
    <link rel="stylesheet" href="http://kenwheeler.github.io/slick/slick/slick-theme.css" type="text/css"/>
    <div class="sub-category">
      {% for block in section.blocks %}
      <div class="content-area">
        <a href="{{ block.settings.cat_link }}">
        <img src="{{ block.settings.cat_img | img_url:'' }}"/>
        <h2>{{ block.settings.cat_title }}</h2>
        </a>
      </div>
      {% endfor %}
      
    </div>
    
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src="http://kenwheeler.github.io/slick/slick/slick.js"></script>
    <script>
    
      $('.sub-category').slick({
      infinite: false,
      speed: 300,
      slidesToShow: 8,
      slidesToScroll: 4,
      responsive: [
        {
          breakpoint: 1024,
          settings: {
            slidesToShow: 4,
            slidesToScroll: 3,
            infinite: true,
          }
        },
        {
          breakpoint: 600,
          settings: {
            slidesToShow: 4,
            slidesToScroll: 2
          }
        },
        {
          breakpoint: 480,
          settings: {
            slidesToShow: 3,
            slidesToScroll: 2
     , the swipe isn't working properly. it should of the canvas and swipe isn't working 
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-category-carousel-{{ ai_gen_id }} {
    width: 85%;
    margin: 0 auto;
    position: relative;
    overflow: hidden;
    touch-action: pan-y;
    user-select: none;
  }

  .ai-category-carousel__container-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.3s ease;
    gap: {{ block.settings.item_spacing }}px;
    cursor: grab;
  }

  .ai-category-carousel__container-{{ ai_gen_id }}:active {
    cursor: grabbing;
  }

  .ai-category-carousel__item-{{ ai_gen_id }} {
    flex: 0 0 calc((100% - ({{ block.settings.slides_desktop | minus: 1 }} * {{ block.settings.item_spacing }}px)) / {{ block.settings.slides_desktop }});
    text-align: center;
    padding: 15px 0;
    pointer-events: auto;
  }

  .ai-category-carousel__link-{{ ai_gen_id }} {
    text-decoration: none;
    display: block;
    color: inherit;
  }

  .ai-category-carousel__image-{{ ai_gen_id }} {
    height: {{ block.settings.image_size }}px;
    width: {{ block.settings.image_size }}px;
    margin: 0 auto {{ block.settings.text_spacing }}px;
    object-fit: cover;
    border-radius: 50%;
    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
    transition: all 0.2s ease-in-out;
    display: block;
    pointer-events: none;
  }

  .ai-category-carousel__item-{{ ai_gen_id }}:hover .ai-category-carousel__image-{{ ai_gen_id }} {
    transform: scale({{ block.settings.hover_scale }});
  }

  .ai-category-carousel__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    margin: 0;
    color: {{ block.settings.text_color }};
    font-family: {{ block.settings.title_font.family }}, {{ block.settings.title_font.fallback_families }};
    font-weight: {{ block.settings.title_font.weight }};
    font-style: {{ block.settings.title_font.style }};
    pointer-events: none;
  }

  .ai-category-carousel__nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: {{ block.settings.nav_background }};
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 2;
    transition: all 0.2s ease;
    color: {{ block.settings.nav_color }};
  }

  .ai-category-carousel__nav-{{ ai_gen_id }}:hover {
    background: {{ block.settings.nav_hover_background }};
    color: {{ block.settings.nav_hover_color }};
  }

  .ai-category-carousel__nav-{{ ai_gen_id }}:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .ai-category-carousel__nav--prev-{{ ai_gen_id }} {
    left: -20px;
  }

  .ai-category-carousel__nav--next-{{ ai_gen_id }} {
    right: -20px;
  }

  .ai-category-carousel__placeholder-{{ ai_gen_id }} {
    height: {{ block.settings.image_size }}px;
    width: {{ block.settings.image_size }}px;
    margin: 0 auto {{ block.settings.text_spacing }}px;
    border-radius: 50%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
    pointer-events: none;
  }

  .ai-category-carousel__placeholder-{{ ai_gen_id }} svg {
    width: 50%;
    height: 50%;
    opacity: 0.5;
  }

  .ai-category-carousel__empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 40px 20px;
    color: #666;
    font-style: italic;
  }

  @media (max-width: 1024px) {
    .ai-category-carousel__item-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - ({{ block.settings.slides_tablet | minus: 1 }} * {{ block.settings.item_spacing }}px)) / {{ block.settings.slides_tablet }});
    }
  }

  @media (max-width: 600px) {
    .ai-category-carousel__item-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - ({{ block.settings.slides_mobile | minus: 1 }} * {{ block.settings.item_spacing }}px)) / {{ block.settings.slides_mobile }});
    }

    .ai-category-carousel__image-{{ ai_gen_id }} {
      height: {{ block.settings.image_size | times: 0.7 }}px;
      width: {{ block.settings.image_size | times: 0.7 }}px;
    }

    .ai-category-carousel__placeholder-{{ ai_gen_id }} {
      height: {{ block.settings.image_size | times: 0.7 }}px;
      width: {{ block.settings.image_size | times: 0.7 }}px;
    }

    .ai-category-carousel__title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_size | times: 0.85 }}px;
    }
  }
{% endstyle %}

<category-carousel-{{ ai_gen_id }}
  class="ai-category-carousel-{{ ai_gen_id }}"
  data-slides-desktop="{{ block.settings.slides_desktop }}"
  data-slides-tablet="{{ block.settings.slides_tablet }}"
  data-slides-mobile="{{ block.settings.slides_mobile }}"
  data-scroll-amount="{{ block.settings.scroll_amount }}"
  {{ block.shopify_attributes }}
>
  {% assign has_categories = false %}
  {% for i in (1..8) %}
    {% assign image_key = 'category_' | append: i | append: '_image' %}
    {% assign title_key = 'category_' | append: i | append: '_title' %}
    {% assign link_key = 'category_' | append: i | append: '_link' %}
    
    {% if block.settings[image_key] != blank or block.settings[title_key] != blank %}
      {% assign has_categories = true %}
      {% break %}
    {% endif %}
  {% endfor %}

  {% if has_categories %}
    {% if block.settings.show_navigation %}
      <button
        class="ai-category-carousel__nav-{{ ai_gen_id }} ai-category-carousel__nav--prev-{{ ai_gen_id }}"
        aria-label="Previous categories"
        data-direction="prev"
      >
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="15,18 9,12 15,6"></polyline>
        </svg>
      </button>

      <button
        class="ai-category-carousel__nav-{{ ai_gen_id }} ai-category-carousel__nav--next-{{ ai_gen_id }}"
        aria-label="Next categories"
        data-direction="next"
      >
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="9,18 15,12 9,6"></polyline>
        </svg>
      </button>
    {% endif %}

    <div class="ai-category-carousel__container-{{ ai_gen_id }}">
      {% for i in (1..8) %}
        {% assign image_key = 'category_' | append: i | append: '_image' %}
        {% assign title_key = 'category_' | append: i | append: '_title' %}
        {% assign link_key = 'category_' | append: i | append: '_link' %}
        
        {% assign category_image = block.settings[image_key] %}
        {% assign category_title = block.settings[title_key] %}
        {% assign category_link = block.settings[link_key] %}

        {% if category_image != blank or category_title != blank %}
          <div class="ai-category-carousel__item-{{ ai_gen_id }}">
            {% if category_link != blank %}
              <a href="{{ category_link }}" class="ai-category-carousel__link-{{ ai_gen_id }}">
            {% endif %}
            
            {% if category_image != blank %}
              <img
                src="{{ category_image | image_url: width: 200 }}"
                alt="{{ category_title | escape }}"
                class="ai-category-carousel__image-{{ ai_gen_id }}"
                loading="lazy"
                width="200"
                height="200"
              >
            {% else %}
              <div class="ai-category-carousel__placeholder-{{ ai_gen_id }}">
                {{ 'image' | placeholder_svg_tag }}
              </div>
            {% endif %}

            {% if category_title != blank %}
              <h3 class="ai-category-carousel__title-{{ ai_gen_id }}">{{ category_title }}</h3>
            {% endif %}

            {% if category_link != blank %}
              </a>
            {% endif %}
          </div>
        {% endif %}
      {% endfor %}
    </div>
  {% else %}
    <div class="ai-category-carousel__empty-state-{{ ai_gen_id }}">
      Add categories to display your carousel
    </div>
  {% endif %}
</category-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class CategoryCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentIndex = 0;
        this.isTransitioning = false;
        this.startX = 0;
        this.currentX = 0;
        this.isDragging = false;
        this.hasMoved = false;
      }

      connectedCallback() {
        this.container = this.querySelector('.ai-category-carousel__container-{{ ai_gen_id }}');
        this.items = this.querySelectorAll('.ai-category-carousel__item-{{ ai_gen_id }}');
        this.prevBtn = this.querySelector('[data-direction="prev"]');
        this.nextBtn = this.querySelector('[data-direction="next"]');
        
        if (!this.container || this.items.length === 0) return;
        
        this.slidesDesktop = parseInt(this.dataset.slidesDesktop);
        this.slidesTablet = parseInt(this.dataset.slidesTablet);
        this.slidesMobile = parseInt(this.dataset.slidesMobile);
        this.scrollAmount = parseInt(this.dataset.scrollAmount);

        this.setupEventListeners();
        this.updateNavigation();
        
        window.addEventListener('resize', () => this.updateNavigation());
      }

      setupEventListeners() {
        if (this.prevBtn) {
          this.prevBtn.addEventListener('click', () => this.slide('prev'));
        }
        if (this.nextBtn) {
          this.nextBtn.addEventListener('click', () => this.slide('next'));
        }

        this.addEventListener('touchstart', this.handleTouchStart.bind(this), { passive: false });
        this.addEventListener('touchmove', this.handleTouchMove.bind(this), { passive: false });
        this.addEventListener('touchend', this.handleTouchEnd.bind(this), { passive: false });

        this.addEventListener('mousedown', this.handleMouseDown.bind(this));
        this.addEventListener('mousemove', this.handleMouseMove.bind(this));
        this.addEventListener('mouseup', this.handleMouseUp.bind(this));
        this.addEventListener('mouseleave', this.handleMouseUp.bind(this));

        this.addEventListener('click', this.handleClick.bind(this));
      }

      handleTouchStart(e) {
        this.startX = e.touches[0].clientX;
        this.isDragging = true;
        this.hasMoved = false;
        this.container.style.transition = 'none';
      }

      handleTouchMove(e) {
        if (!this.isDragging) return;
        
        this.currentX = e.touches[0].clientX;
        const diff = this.startX - this.currentX;
        
        if (Math.abs(diff) > 10) {
          this.hasMoved = true;
          e.preventDefault();
        }
      }

      handleTouchEnd(e) {
        if (!this.isDragging) return;
        this.isDragging = false;
        
        this.container.style.transition = 'transform 0.3s ease';
        
        const diff = this.startX - this.currentX;
        if (Math.abs(diff) > 50) {
          if (diff > 0) {
            this.slide('next');
          } else {
            this.slide('prev');
          }
        }
      }

      handleMouseDown(e) {
        if (e.target.closest('.ai-category-carousel__nav-{{ ai_gen_id }}')) return;
        
        this.startX = e.clientX;
        this.isDragging = true;
        this.hasMoved = false;
        this.container.style.transition = 'none';
        e.preventDefault();
      }

      handleMouseMove(e) {
        if (!this.isDragging) return;
        
        this.currentX = e.clientX;
        const diff = this.startX - this.currentX;
        
        if (Math.abs(diff) > 10) {
          this.hasMoved = true;
        }
      }

      handleMouseUp(e) {
        if (!this.isDragging) return;
        this.isDragging = false;
        
        this.container.style.transition = 'transform 0.3s ease';
        
        const diff = this.startX - this.currentX;
        if (Math.abs(diff) > 50) {
          if (diff > 0) {
            this.slide('next');
          } else {
            this.slide('prev');
          }
        }
      }

      handleClick(e) {
        if (this.hasMoved) {
          e.preventDefault();
          e.stopPropagation();
        }
      }

      getCurrentSlidesPerView() {
        const width = window.innerWidth;
        if (width <= 600) return this.slidesMobile;
        if (width <= 1024) return this.slidesTablet;
        return this.slidesDesktop;
      }

      getMaxIndex() {
        const slidesPerView = this.getCurrentSlidesPerView();
        return Math.max(0, this.items.length - slidesPerView);
      }

      slide(direction) {
        if (this.isTransitioning) return;
        
        const maxIndex = this.getMaxIndex();
        const scrollAmount = this.scrollAmount;
        
        if (direction === 'next') {
          this.currentIndex = Math.min(this.currentIndex + scrollAmount, maxIndex);
        } else {
          this.currentIndex = Math.max(this.currentIndex - scrollAmount, 0);
        }
        
        this.updateCarousel();
        this.updateNavigation();
      }

      updateCarousel() {
        this.isTransitioning = true;
        const slidesPerView = this.getCurrentSlidesPerView();
        const itemWidth = 100 / slidesPerView;
        const translateX = -(this.currentIndex * itemWidth);
        
        this.container.style.transform = `translateX(${translateX}%)`;
        
        setTimeout(() => {
          this.isTransitioning = false;
        }, 300);
      }

      updateNavigation() {
        if (!this.prevBtn || !this.nextBtn) return;
        
        const maxIndex = this.getMaxIndex();
        
        this.prevBtn.disabled = this.currentIndex === 0;
        this.nextBtn.disabled = this.currentIndex >= maxIndex;
        
        if (maxIndex === 0) {
          this.prevBtn.style.display = 'none';
          this.nextBtn.style.display = 'none';
        } else {
          this.prevBtn.style.display = 'flex';
          this.nextBtn.style.display = 'flex';
        }
      }
    }

    customElements.define('category-carousel-{{ ai_gen_id }}', CategoryCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Category carousel",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "slides_desktop",
      "min": 3,
      "max": 8,
      "step": 1,
      "label": "Categories per row (desktop)",
      "default": 6
    },
    {
      "type": "range",
      "id": "slides_tablet",
      "min": 2,
      "max": 6,
      "step": 1,
      "label": "Categories per row (tablet)",
      "default": 4
    },
    {
      "type": "range",
      "id": "slides_mobile",
      "min": 2,
      "max": 4,
      "step": 1,
      "label": "Categories per row (mobile)",
      "default": 3
    },
    {
      "type": "range",
      "id": "scroll_amount",
      "min": 1,
      "max": 4,
      "step": 1,
      "label": "Scroll amount",
      "default": 2
    },
    {
      "type": "range",
      "id": "item_spacing",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Space between items",
      "default": 16
    },
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "range",
      "id": "image_size",
      "min": 60,
      "max": 150,
      "step": 5,
      "unit": "px",
      "label": "Image size",
      "default": 100
    },
    {
      "type": "range",
      "id": "hover_scale",
      "min": 1.0,
      "max": 1.3,
      "step": 0.1,
      "label": "Hover scale effect",
      "default": 1.1
    },
    {
      "type": "header",
      "content": "Text"
    },
    {
      "type": "font_picker",
      "id": "title_font",
      "label": "Title font",
      "default": "helvetica_n4"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 10,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Title size",
      "default": 14
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#1c1c1c"
    },
    {
      "type": "range",
      "id": "text_spacing",
      "min": 5,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Space between image and text",
      "default": 8
    },
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show navigation arrows",
      "default": true
    },
    {
      "type": "color",
      "id": "nav_background",
      "label": "Navigation background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_color",
      "label": "Navigation color",
      "default": "#1c1c1c"
    },
    {
      "type": "color",
      "id": "nav_hover_background",
      "label": "Navigation hover background",
      "default": "#1c1c1c"
    },
    {
      "type": "color",
      "id": "nav_hover_color",
      "label": "Navigation hover color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Category 1"
    },
    {
      "type": "image_picker",
      "id": "category_1_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "category_1_title",
      "label": "Title",
      "default": "Category 1"
    },
    {
      "type": "url",
      "id": "category_1_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 2"
    },
    {
      "type": "image_picker",
      "id": "category_2_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "category_2_title",
      "label": "Title",
      "default": "Category 2"
    },
    {
      "type": "url",
      "id": "category_2_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 3"
    },
    {
      "type": "image_picker",
      "id": "category_3_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "category_3_title",
      "label": "Title",
      "default": "Category 3"
    },
    {
      "type": "url",
      "id": "category_3_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 4"
    },
    {
      "type": "image_picker",
      "id": "category_4_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "category_4_title",
      "label": "Title",
      "default": "Category 4"
    },
    {
      "type": "url",
      "id": "category_4_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 5"
    },
    {
      "type": "image_picker",
      "id": "category_5_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "category_5_title",
      "label": "Title",
      "default": "Category 5"
    },
    {
      "type": "url",
      "id": "category_5_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 6"
    },
    {
      "type": "image_picker",
      "id": "category_6_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "category_6_title",
      "label": "Title",
      "default": "Category 6"
    },
    {
      "type": "url",
      "id": "category_6_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 7"
    },
    {
      "type": "image_picker",
      "id": "category_7_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "category_7_title",
      "label": "Title"
    },
    {
      "type": "url",
      "id": "category_7_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 8"
    },
    {
      "type": "image_picker",
      "id": "category_8_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "category_8_title",
      "label": "Title"
    },
    {
      "type": "url",
      "id": "category_8_link",
      "label": "Link"
    }
  ],
  "presets": [
    {
      "name": "Category carousel"
    }
  ]
}
{% endschema %}